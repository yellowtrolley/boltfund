// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package pg.tm470.boltfund.domain;

import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;
import pg.tm470.boltfund.domain.WebUser;
import pg.tm470.boltfund.domain.WebUserDataOnDemand;

privileged aspect WebUserDataOnDemand_Roo_DataOnDemand {
    
    declare @type: WebUserDataOnDemand: @Component;
    
    private Random WebUserDataOnDemand.rnd = new SecureRandom();
    
    private List<WebUser> WebUserDataOnDemand.data;
    
    public WebUser WebUserDataOnDemand.getNewTransientWebUser(int index) {
        WebUser obj = new WebUser();
        setEmail(obj, index);
        setFax(obj, index);
        setMobile(obj, index);
        setName(obj, index);
        setPassword(obj, index);
        setPhone(obj, index);
        setSurname(obj, index);
        setUsername(obj, index);
        return obj;
    }
    
    public void WebUserDataOnDemand.setEmail(WebUser obj, int index) {
        String email = "foo" + index + "@bar.com";
        if (email.length() > 50) {
            email = email.substring(0, 50);
        }
        obj.setEmail(email);
    }
    
    public void WebUserDataOnDemand.setFax(WebUser obj, int index) {
        String fax = "fax_" + index;
        if (fax.length() > 25) {
            fax = fax.substring(0, 25);
        }
        obj.setFax(fax);
    }
    
    public void WebUserDataOnDemand.setMobile(WebUser obj, int index) {
        String mobile = "mobile_" + index;
        if (mobile.length() > 25) {
            mobile = mobile.substring(0, 25);
        }
        obj.setMobile(mobile);
    }
    
    public void WebUserDataOnDemand.setName(WebUser obj, int index) {
        String name = "name_" + index;
        if (name.length() > 30) {
            name = name.substring(0, 30);
        }
        obj.setName(name);
    }
    
    public void WebUserDataOnDemand.setPassword(WebUser obj, int index) {
        String password = "password_" + index;
        if (password.length() > 30) {
            password = password.substring(0, 30);
        }
        obj.setPassword(password);
    }
    
    public void WebUserDataOnDemand.setPhone(WebUser obj, int index) {
        String phone = "phone_" + index;
        if (phone.length() > 25) {
            phone = phone.substring(0, 25);
        }
        obj.setPhone(phone);
    }
    
    public void WebUserDataOnDemand.setSurname(WebUser obj, int index) {
        String surname = "surname_" + index;
        if (surname.length() > 30) {
            surname = surname.substring(0, 30);
        }
        obj.setSurname(surname);
    }
    
    public void WebUserDataOnDemand.setUsername(WebUser obj, int index) {
        String username = "username_" + index;
        if (username.length() > 30) {
            username = username.substring(0, 30);
        }
        obj.setUsername(username);
    }
    
    public WebUser WebUserDataOnDemand.getSpecificWebUser(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        WebUser obj = data.get(index);
        Long id = obj.getId();
        return WebUser.findWebUser(id);
    }
    
    public WebUser WebUserDataOnDemand.getRandomWebUser() {
        init();
        WebUser obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return WebUser.findWebUser(id);
    }
    
    public boolean WebUserDataOnDemand.modifyWebUser(WebUser obj) {
        return false;
    }
    
    public void WebUserDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = WebUser.findWebUserEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'WebUser' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<WebUser>();
        for (int i = 0; i < 10; i++) {
            WebUser obj = getNewTransientWebUser(i);
            try {
                obj.persist();
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
